services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    ports:
      - "8000:8000"
    env_file:
      - ../config/.env.prod
    volumes:
      - ../data/ml:/app/data/ml
      - ../log:/app/log
    runtime: nvidia
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    volumes:
      - ../data/postgresql_data:/var/lib/postgresql/data
    env_file:
      - ../config/.env.prod
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  zookeeper:
    image: bitnami/zookeeper:3.9.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'echo > /dev/tcp/0.0.0.0/2181'" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.9.0
    restart: unless-stopped
    ports:
      - "127.0.0.1:9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - BITNAMI_DEBUG=yes
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'echo > /dev/tcp/0.0.0.0/9092'" ]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  postgresql_data:
  minio_data:
