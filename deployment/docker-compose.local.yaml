services:
  app:
    build:
      context: ..
      dockerfile: docker/Dockerfile.local
    ports:
      - "8000:8000"
    env_file:
      - ../config/.env.local
    volumes:
      - ../cli:/app/cli
      - ../internal:/app/internal
      - ../tests:/app/tests
      - ../log:/app/log
      - ../migrations:/app/migrations
      - ../pyproject.toml:/app/pyproject.toml
      - ../scripts:/app/scripts
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      s3:
        condition: service_healthy
      kafka:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    volumes:
      - ../data/postgresql_data:/var/lib/postgresql/data
    env_file:
      - ../config/.env.local
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  s3:
    image: minio/minio:latest
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Web UI
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=miniopass
    volumes:
      - ../data/minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://127.0.0.1:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=Q5oAUJkyQx2A8SZbO-Pkew
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - ../data/kafka_data:/bitnami/kafka
    healthcheck:
      test: [ "CMD-SHELL", "bash", "-c", "echo > /dev/tcp/localhost/9092" ]
      interval: 10s
      timeout: 10s
      retries: 10

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      kafka:
        condition: service_healthy

volumes:
  postgresql_data:
  kafka_data:
  minio_data:
